services:

  mysql:
        container_name: Database
        image: mysql
        volumes:
        - 'apache-mysql:/var/lib/mysql'
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        networks:
            - coolnetworkrighthere

  php-apache:
        container_name: portfolio-application
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - '.:/var/www/html/'
        ports:
            - '${APP_PORT:-80}:80'
        networks:
        - coolnetworkrighthere
        depends_on:
        - mysql

  composer:
        container_name: composer
        image: composer:latest
        volumes:
            - '.:/app'
        command: >
           "composer update"
        networks:
            coolnetworkrighthere:
            driver: bridge
  volumes:
    apache-mysql:
            driver: local

  node:
        container_name: npm
        image: node:latest
        working_dir: /home/node/app
        volumes:
            - ./:/home/node/app
        command: >
            bash -c "npm update && npm run ts-watch"
